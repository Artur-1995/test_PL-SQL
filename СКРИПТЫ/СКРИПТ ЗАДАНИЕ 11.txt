Задание:
В модель данных добавьте сумму договора по продукту. Заполните поле для всех 
продуктов суммой максимальной дебетовой операции по счету для продукта типа 
КРЕДИТ, и суммой максимальной кредитовой операции по счету продукта для 
продукта типа ДЕПОЗИТ или КАРТА

Ниже прописал вопросы с которыми столкнулся и то, как я на них дал ответ
для решения поставленных задачь, чтобы можно было правильно расценить мое
решение, так как оно может отличатся от предпологаемого заложенного смысла.
И может быть не так расценено, без моих пояснений.


Вопрос первый максимальная сумма операции по кредиту?
Я сделал выбор маскимальной суммы, при помощи первой операции с отметкой 
DT = 1, и принял решение что это и есть лимит
Логика такая, максимальная сумма не может быть больше лимита по карте, 
значит равна лимиту.

Вопрос второй максимальная сумма операции по карте и депозиту?
Я сделал выбор маскимальной суммы, при помощи ограничения некой большой 
суммой, выбор пал на 200 млн., но из-за ограничения поля стал 20 млн.
Логика такая, однажды я видел такую максимальную сумму ограничения 
для операции перевода между счетами по реквизитам в мобильном приложении

Вопрос третий почему при открытии счета происходит дебетовая операция и DT = 1?
Логика такая что при получении кредита происходит дебетовая операция 
потому что деньги со счета кредита поступают на карту клиенту тоесть происходит
пополнение поэтому операция дебетовая, а кредитная операция подразумевает
расход знак "-" перед суммой, при подведении итогов при расхождении данных
которые были в одном из предыдущих заданий

Процедура:

-- Создание колонки MAX_SUM в таблице PRODUCTS
DROP PROCEDURE AddColumnMaxSum;
CREATE DEFINER=`root`@`%` PROCEDURE `AddColumnMaxSum`()
BEGIN
   ALTER TABLE `PRODUCTS`
DROP COLUMN `MAX_SUM`;

ALTER TABLE `PRODUCTS`
ADD COLUMN `MAX_SUM` 
    DECIMAL(10, 2) NOT NULL DEFAULT 0
 COMMENT 'Максимальная сумма операции';
END

Скрипт заполнения:

WITH
    tab AS (
        SELECT 
            r.`ACC_REF`, 
            r.`DT`, 
            CASE
                WHEN r.`DT` = 0 THEN -r.`SUM`
                ELSE r.`SUM`
            END AS correct_saldo
        FROM 
            `RECORDS` r
            JOIN `ACCOUNTS` a ON r.`ACC_REF` = a.`ID`
    ),
    updated_data AS (
        SELECT DISTINCT
            p.`ID`,
            p.`PRODUCT_TYPE_ID` AS type_id,
            a.`ACC_NUM`,
            a.`SALDO`AS correct_saldo
        FROM
            `CLIENTS` c
            JOIN `ACCOUNTS` a ON c.`ID` = a.`CLIENT_REF`
            JOIN `PRODUCTS` p ON c.`ID` = p.`CLIENT_REF`
            JOIN `tab` t ON a.`ID` = t.`ACC_REF`
        WHERE
            p.`CLOSE_DATE` IS NULL
            AND a.`SALDO` >= t.correct_saldo
    )
UPDATE 
    `PRODUCTS` p
JOIN 
    `updated_data` ud ON p.`ID` = ud.`ID`
SET 
    p.`max_sum` = CASE
        WHEN ud.`type_id` = 1 
        THEN ABS(ud.`correct_saldo`)
        ELSE '20000000'
        END
